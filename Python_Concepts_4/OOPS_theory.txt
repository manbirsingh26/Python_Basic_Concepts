OOPs (Object-Oriented Programming) is a programming paradigm based on the concept of objects,
which can contain data in the form of attributes or properties and code in the form of methods or functions.
The principles of OOPS are based on 4 pillars apart from classes and objects.
A class has attributes and behaviour.

Main concepts of OOPS are:-
1. Class
2. Object
3. Abstraction
4. Encapsulation
5. Polymorphism
6. Inheritance

1. Class
A Class is a blueprint for creating "objects".
When a class is created, no memory is allocated.
A class is a logical entity.
A class is used to bind data as well as methods together as a single unit.
e.g. int

2. Object
An object is an instance of a class.
Objects are allocated memory space whenever they are created.
An object is a physical entity.
Objects are like a variable of the class.
Object has all the properties of its class.
e.g. 1, 2 etc. are objects of int class

3. Abstraction
It means displaying only essential details and hiding the all other details.
e.g. Car will accelerate but internal working of engine not exposed.

4. Encapsulation
It means bundling of data & all methods that can act on an object of that data into a single unit.
e.g. Car can have colour, engine, brakes and a lot of other methods.

5. Inheritance
It involves the concept of parent class and child class.
Here the child class derives from parent class and child class inherits all the methods/functions
and attributes of parent class.
e.g. Any new car company can inherit all the information from car class.

6. Polymorphism
The word "polymorphism" means "many forms", and in programming.
It refers to methods(functions)/operators with the same name that can be executed on many objects or classes
in different forms.
e.g. we have three classes: Car, Boat, and Plane, and they all have a method called move()

